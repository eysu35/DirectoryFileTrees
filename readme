Assignment 4 readme File

------------------------------------------------------------------------
Student 1: What is your name?

Ellen Su

------------------------------------------------------------------------
Student 2: What is your name?

Michael Garcia

------------------------------------------------------------------------
Student 1: What authorized sources of information did you use to
complete the assignment? COPY THE LIST of authorized sources of
information given in the "Policies" web page (also available on armlab
in the file ~cos217/AuthorizedSourcesList ) to this section of the
readme file, and edit it as appropriate.

The course's lectures.

The course's precepts.

The course's website.

Documents that are referenced directly by the course's website. Such 
documents include the course's lecture slides and precept handouts.

The course's current staff members outside of class time through office hours.

Current lab teaching assistants through visits to the course labs.

------------------------------------------------------------------------
Student 2: What authorized sources of information did you use to
complete the assignment? COPY THE LIST of authorized sources of
information given in the "Policies" web page (also available on armlab
in the file ~cos217/AuthorizedSourcesList ) to this section of the
readme file, and edit it as appropriate.

The course's lectures.

The course's precepts.

The course's website.

Documents that are referenced directly by the course's website. Such 
documents include the course's lecture slides and precept handouts.

The course's textbooks.

The man pages on the armlab cluster.

The course's current staff members outside of class time through office hours.

The course's current staff members outside of class time through meetings.

The course's current staff members outside of class time through Ed.

The course's current staff members outside of class time through e-mail.

Current lab teaching assistants through visits to the course labs.

------------------------------------------------------------------------
Student 1: What unauthorized sources of information did you use to
complete the assignment? List any unauthorized sources of information
that you used to complete the assignment, and describe how you used
them. The course "Policies" web page defines unauthorized sources of
information, and any source that you have used but not listed in the
authorized sources should be included here. Please note that using an
unauthorized source may trigger a course penalty, and depending on the
nature of the interaction, may additionally require the interaction
being reported to the Committee on Discipline. Write "None" if you used
no unauthorized sources of information.

None

------------------------------------------------------------------------
Student 2: What unauthorized sources of information did you use to
complete the assignment? List any unauthorized sources of information
that you used to complete the assignment, and describe how you used
them. The course "Policies" web page defines unauthorized sources of
information, and any source that you have used but not listed in the
authorized sources should be included here. Please note that using an
unauthorized source may trigger a course penalty, and depending on the
nature of the interaction, may additionally require the interaction
being reported to the Committee on Discipline. Write "None" if you used
no unauthorized sources of information.

None

------------------------------------------------------------------------
Student 1: What is your assessment of the assignment? Was it helpful?
Was it fun?



------------------------------------------------------------------------
Student 2: What is your assessment of the assignment? Was it helpful?
Was it fun?



------------------------------------------------------------------------
(optional) What information can you provide about your submission that
will help your grader to grade it in the most favorable light? In
particular, what bugs are in your submission?



------------------------------------------------------------------------
What warnings does splint generate for Part 2's checker, and what are
your disagreements with them? Copy the splint warnings here, and
express your disagreement after each warning. If there are no
warnings, then write "None."



------------------------------------------------------------------------
What warnings does critTer generate on checkerDT.c, and what are your
disagreements with them? Copy the critTer warnings here, and express
your disagreement after each warning. If there are no warnings, then
write "None."



------------------------------------------------------------------------
What warnings does splint generate on your Part 3 code, and what are
your disagreements with them? Copy the splint warnings here, and
express your disagreement after each warning. If there are no
warnings, then write "None."



------------------------------------------------------------------------
What warnings does critTer generate on your Part 3 code, and what are
your disagreements with them? Copy the critTer warnings here, and
express your disagreement after each warning. If there are no
warnings, then write "None."



------------------------------------------------------------------------
For each of the first three faulty BDT implementations required by Step
1.5, identify the function where there is a bug. You do not have to
identify the bug itself, only its location, but note that this must be
the location of the underlying error, which is not necessarily where
the error manifests itself or is "noticed" by the client.


      Executable         Function with the underlying error
===============================================================
         ./bdtBad1       BDT_insertPath  
---------------------------------------------------------------
         ./bdtBad2       BDT_newNode
---------------------------------------------------------------
         ./bdtBad3       BDT_unlinkParentToChild
===============================================================

------------------------------------------------------------------------
bdtBad4 and bdtBad5 are optional extra credit:

For bdtBad4, you do not have to find the bug. Instead, indicate what
is the fundamental difference with trying to debug this executable in
gdb versus the first three:



For bdtBad5, you do not have to find the bug. Instead, indicate one
hypothesis for how the program could crash within the DynArray module,
which we promise is itself correct:



------------------------------------------------------------------------
What are your critiques of the given DT implementations, as
specified in Step 2.5?

1) DT_traversePathFrom is poorly named. It does not specify what it is 
traversing the path for (the last existing node in the path).

2) DT_traversePath is a useless function. All it does is check to make
sure path is not null and call DT_traversePathAt with path. Since 
DT_traversePathAt also asserts that path != NULL, this function is
pointless. 

3) DT_rmPathFrom is a useless function. It is only called in DT_rmPathAt
to remove the node curr and all its children. Since DT_rmPathFrom is a
one line function, it seves no purpose to modularize this.


------------------------------------------------------------------------
